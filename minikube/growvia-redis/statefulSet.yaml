apiVersion: apps/v1
#we want to use StatefulSet instead of Deployment
kind: StatefulSet
metadata:
  name: growvia-redis
  namespace: production
spec:
  serviceName: growvia-redis
  # The simple reason why not 2 or 3 replicase used (so that 1 is the master and the others sleeves/followers)
  # is because i don’t have a lot of resources(spaces) on local and minikube is just one single node. We have 
  # other objects that will be vreatead and i don’t want minikube to run out of memory
  replicas: 1
  selector:
    matchLabels:
      app: growvia-redis
  template:
    metadata:
      labels:
        app: growvia-redis
    spec:
      # will be executed the first time when container starts
      initContainers:
      - name: config
        image: redis:alpine
        command: [ "sh", "-c" ]
        #This code: Naming Convension that StatefulSet use it
        # And now the code in ‘args’  ->it’s check for the first pod  ‘growvia-redis-0’ is it master and the others (in this situation) ‘growvia-redis-1’ and ‘growvia-redis-2’
        # is it slaves/followers. And then if it some happened to this master ‘growvia-redis-0’ it will make one of the slaves the new master:

        #The StatefulSet will recreate the pod with the same name ‘growvia-redis-0’ (The master will ALWAYS BE THE ‘growvia-redis-0’)

        args:
          - |
            cp /tmp/redis/redis.conf /etc/redis/redis.conf
            
            echo "finding master..."
            MASTER_FQDN=`hostname  -f | sed -e 's/growvia-redis-[0-9]\./growvia-redis-0./'`
            if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
              echo "master not found, defaulting to growvia-redis-0"

              if [ "$(hostname)" == "jobber-growvia-0" ]; then
                echo "this is jobber-growvia-0, not updating config..."
              else
                echo "updating redis.conf..."
                echo "slaveof $MASTER_FQDN 6379" >> /etc/redis/redis.conf
              fi
            else
              echo "sentinel found, finding master"
              MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^jobber-redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
              echo "master found : $MASTER, updating redis.conf"
              echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
            fi
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/
        - name: config
          mountPath: /tmp/redis/
      containers:
      - name: growvia-redis
        image: redis:alpine
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: growvia-redis
        readinessProbe:
          periodSeconds: 10
          tcpSocket:
            port: growvia-redis
        livenessProbe:
          periodSeconds: 10
          tcpSocket:
            port: growvia-redis
        volumeMounts:
        - name: data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis/
      volumes:
      - name: redis-config
        emptyDir: {}
      - name: config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #The storageClass name 'redis-storage'
      storageClassName: "redis-storage" 
      resources:
        requests:
          storage: 500Mi