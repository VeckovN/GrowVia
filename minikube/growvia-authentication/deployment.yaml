apiVersion: apps/v1
kind: Deployment
metadata:
  name: growvia-authentication
  namespace: production
spec:
  replicas: 1 #i'll test with more
  selector:
    matchLabels:
      app: growvia-authentication
  strategy:
    #RollingUpdate will create the new Pod first and then terminate the old one
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: growvia-authentication
    spec:
      containers:
      - name: growvia-authentication
        image: veckovn/growvia-authentication:stable
        #Always whenever the tag :stable is used 
        imagePullPolicy: Always
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            cpu: 100m
            memory: 150Mi
        ports:
        - name: authentication
          containerPort: 4002
        env:
          - name: ENALBE_APM
            value: '1'
          - name: NODE_ENV
            value: 'production'
          - name: RUNNING_IN_DOCKER
            value: '0'
          - name: CLIENT_URL
            value: "http://localhost:3000"
          - name: API_GATEWAY_URL
            value: "http://growvia-gateway.production.svc.cluster.local:4000"
          - name: ELASTICSEARCH_URL
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-elastic-url
          - name: ELASTICSEARCH_APM_SERVER_URL
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-elastic-apm-server-url          
          - name: ELASTICSEARCH_APM_TOKEN
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-elastic-apm-token                
          - name: RABBITMQ_AMQP_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-rabbitmq-endpoint
          - name: REDIS_HOST
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-redis-host
          - name: POSTGRESQL_HOST
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-postgres-host
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-postgres-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: growvia-postgres-password
          #Depends on service -> here is auth_service
          - name: POSTGRESQL_NAME
            value: auth_service
          - name: CLOUDINARY_NAME
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: cloudinary-name
          - name: CLOUDINARY_API_KEY
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: cloudinary-api-key
          - name: CLOUDINARY_API_SECRET
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: cloudinary-api-secret
          - name: GATEWAY_JWT_TOKEN 
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: gateway-jwt-token
          - name: JWT_TOKEN
            valueFrom:
              secretKeyRef:
                name: secret-data
                key: jwt-token